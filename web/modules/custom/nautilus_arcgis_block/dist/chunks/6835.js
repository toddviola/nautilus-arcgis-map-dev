"use strict";(self.webpackChunkarcgis_map_test=self.webpackChunkarcgis_map_test||[]).push([[6835],{26849:(e,t,r)=>{function n(e){return null!=a(e)||null!=s(e)}function o(e){return u.test(e)}function i(e){return a(e)??s(e)}function s(e){const t=new Date(e);return function(e,t){if(Number.isNaN(e.getTime()))return!1;let r=!0;if(l&&/\d+\W*$/.test(t)){const e=t.match(/[a-zA-Z]{2,}/);if(e){let t=!1,n=0;for(;!t&&n<=e.length;)t=!p.test(e[n]),n++;r=!t}}return r}(t,e)?Number.isNaN(t.getTime())?null:t.getTime()-6e4*t.getTimezoneOffset():null}function a(e){const t=u.exec(e);if(!t?.groups)return null;const r=t.groups,n=+r.year,o=+r.month-1,i=+r.day,s=+(r.hours??"0"),a=+(r.minutes??"0"),p=+(r.seconds??"0");if(s>23)return null;if(a>59)return null;if(p>59)return null;const l=r.ms??"0",c=l?+l.padEnd(3,"0").substring(0,3):0;let d;if(r.isUTC||!r.offsetSign)d=Date.UTC(n,o,i,s,a,p,c);else{const e=+r.offsetHours,t=+r.offsetMinutes;d=6e4*("+"===r.offsetSign?-1:1)*(60*e+t)+Date.UTC(n,o,i,s,a,p,c)}return Number.isNaN(d)?null:d}r.d(t,{Br:()=>o,Cq:()=>n,_U:()=>i});const u=/^(?:(?<year>-?\d{4,})-(?<month>\d{2})-(?<day>\d{2}))(?:T(?<hours>\d{2}):(?<minutes>\d{2}):(?<seconds>\d{2})(?:\.(?<ms>\d+))?)?(?:(?<isUTC>Z)|(?:(?<offsetSign>\+|-)(?<offsetHours>\d{2}):(?<offsetMinutes>\d{2})))?$/;const p=/^((jan(uary)?)|(feb(ruary)?)|(mar(ch)?)|(apr(il)?)|(may)|(jun(e)?)|(jul(y)?)|(aug(ust)?)|(sep(tember)?)|(oct(ober)?)|(nov(ember)?)|(dec(ember)?)|(am)|(pm)|(gmt)|(utc))$/i,l=!Number.isNaN(new Date("technology 10").getTime())},66835:(e,t,r)=>{r.r(t),r.d(t,{default:()=>X});var n=r(90252),o=(r(14309),r(22982)),i=(r(89873),r(58004),r(57215),r(36766),r(91191),r(43455),r(11905),r(81661),r(29161),r(80947)),s=r(53991),a=r(70162),u=r(75899),p=r(17134),l=r(92432),c=(r(92262),r(22333)),d=r(59585),y=r(92592),f=r(56215),m=r(20970),g=r(51819),h=r(16825),w=r(60249),b=r(66011),F=r(44334),S=r(1267),T=r(86381),x=r(716),v=r(64460),C=r(57116);let A=class extends h.A{constructor(){super(...arguments),this._connection=null,this._workerHandler=null,this.capabilities=(0,S.f)(!1,!1),this.type="wfs",this.refresh=(0,b.sg)((async()=>{await this.load();const e={customParameters:this.layer.customParameters,maxRecordCount:this.layer.maxRecordCount,maxTotalRecordCount:this.layer.maxTotalRecordCount,maxPageCount:this.layer.maxPageCount},{extent:t}=await this._workerHandler.refresh(e);return t&&(this.sourceJSON.extent=t),{dataChanged:!0,updates:{extent:this.sourceJSON.extent}}}))}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this._startWorker({signal:t})),Promise.resolve(this)}destroy(){this._connection?.close(),this._connection=null,this._workerHandler=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(e,t={}){const r=await this.queryFeaturesJSON(e,t);return x.A.fromJSON(r)}async queryFeaturesJSON(e,t={}){return await this.load(t),this._workerHandler.queryFeatures(e?e.toJSON():void 0,t)}async queryFeatureCount(e,t={}){return await this.load(t),this._workerHandler.queryFeatureCount(e?e.toJSON():void 0,t)}async queryObjectIds(e,t={}){return await this.load(t),this._workerHandler.queryObjectIds(e?e.toJSON():void 0,t)}async queryExtent(e,t={}){await this.load(t);const r=await this._workerHandler.queryExtent(e?e.toJSON():void 0,t);return{count:r.count,extent:C.A.fromJSON(r.extent)}}async querySnapping(e,t={}){return await this.load(t),this._workerHandler.querySnapping(e,t)}async _createLoadOptions(e){const{url:t,customParameters:r,name:n,namespaceUri:o,fields:i,geometryType:s,maxRecordCount:a,maxPageCount:u,maxTotalRecordCount:p,swapXY:l}=this.layer,c="defaults"===this.layer.originOf("spatialReference")?void 0:this.layer.spatialReference;if(!t)throw new g.A("wfs-layer:missing-url","WFSLayer must be created with a url");this.wfsCapabilities||(this.wfsCapabilities=await(0,T.Fu)(t,{customParameters:r,...e}));const d=["fields","geometryType","name","namespaceUri","swapXY"].some((e=>null==this.layer[e])),y=d?await(0,T.O8)(this.wfsCapabilities,n,o,{spatialReference:c,customParameters:r,signal:e?.signal}):{...(0,T.YW)(i??[]),geometryType:s,name:n,namespaceUri:o,spatialReference:c,swapXY:l},m=(0,T.mG)(this.wfsCapabilities.readFeatureTypes(),y.name,y.namespaceUri),h=f.g.toJSON(y.geometryType),{operations:w}=this.wfsCapabilities,b=w.GetFeature.url,F=w.GetFeature.outputFormat;return{customParameters:r,featureType:m,fields:y.fields?.map((e=>e.toJSON()))??[],geometryField:y.geometryField,geometryType:h,getFeatureUrl:b,getFeatureOutputFormat:F,maxRecordCount:a,maxPageCount:u,maxTotalRecordCount:p,objectIdField:y.objectIdField,spatialReference:y.spatialReference?.toJSON(),swapXY:!!y.swapXY}}async _startWorker(e){const[t,r]=await(0,b.Lx)([this._createLoadOptions(e),(0,F.ho)("WFSSourceWorker",{...e,strategy:(0,c.A)("feature-layers-workers")?"dedicated":"local",registryTarget:this})]),n=t.error||r.error||null,o=r.value||null;if(n)throw o&&o.close(),n;const i=t.value;this._connection=r.value,this._workerHandler=this._connection.createInvokeProxy();const s=await this._workerHandler.load(i,e);for(const e of s.warnings)w.A.getLogger(this.layer).warn("#load()",`${e.message} (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{warning:e});this.sourceJSON={dateFieldsTimeReference:{timeZoneIANA:v.n$},extent:s.extent,fields:i.fields,geometryType:i.geometryType,objectIdField:i.objectIdField,geometryField:i.geometryField,drawingInfo:(0,S.F0)(i.geometryType),name:i.featureType.title,wfsInfo:{name:i.featureType.name,featureUrl:i.getFeatureUrl,maxFeatures:i.maxRecordCount,swapXY:i.swapXY,supportedSpatialReferences:i.featureType.supportedSpatialReferences,version:"2.0.0",wfsNamespace:i.featureType.namespaceUri}}}};(0,n._)([(0,p.MZ)()],A.prototype,"capabilities",void 0),(0,n._)([(0,p.MZ)({constructOnly:!0})],A.prototype,"layer",void 0),(0,n._)([(0,p.MZ)()],A.prototype,"sourceJSON",void 0),(0,n._)([(0,p.MZ)()],A.prototype,"type",void 0),(0,n._)([(0,p.MZ)()],A.prototype,"wfsCapabilities",void 0),A=(0,n._)([(0,d.$)("esri.layers.graphics.sources.WFSSource")],A);var P,R=r(2095),M=r(71315),_=r(37671),O=r(65159),I=r(29293),E=r(18249),k=r(42276),j=r(61893),N=r(33203),Z=r(8548),G=r(53479),U=r(93540),q=r(11977),D=r(34639),$=r(40415),L=r(1836),W=r(96328),J=r(32358),Y=r(54413);const H=(0,q.p)();let V=P=class extends((0,E.f)((0,M.d)((0,O.J)((0,_.F)((0,R.d)((0,Z.e)((0,j.J)((0,N.j)((0,I.q)((0,k.A)((0,s.P)(m.A)))))))))))){static fromWFSLayerInfo(e){const{customParameters:t,fields:r,geometryField:n,geometryType:o,name:i,namespaceUri:s,objectIdField:a,spatialReference:u,swapXY:p,url:l,wfsCapabilities:c}=e;return new P({customParameters:t,fields:r,geometryField:n,geometryType:o,name:i,namespaceUri:s,objectIdField:a,spatialReference:u,swapXY:p,url:l,wfsCapabilities:c})}constructor(e){super(e),this.copyright=null,this.customParameters=null,this.dateFieldsTimeZone=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.featureUrl=void 0,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.operationalLayerType="WFS",this.maxRecordCount=3e3,this.maxPageCount=10,this.maxTotalRecordCount=2e5,this.mode=0,this.name=null,this.namespaceUri=null,this.outFields=null,this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new A({layer:this}),this.spatialReference=Y.A.WGS84,this.spatialReferences=[4326],this.swapXY=void 0,this.title="WFS",this.type="wfs",this.url=null,this.version=void 0}destroy(){this.source?.destroy()}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["WFS"]},e).then((()=>this.source.load(e))).then((()=>{this.read(this.source.sourceJSON,{origin:"service",url:this.parsedUrl}),this.revert(["objectIdField","fields","timeInfo","spatialReference","name","namespaceUri"],"service"),(0,D.yp)(this.renderer,this.fieldsIndex),(0,D.sv)(this.timeInfo,this.fieldsIndex)}))),Promise.resolve(this)}get capabilities(){return this.source?.capabilities}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("capabilities"),(this._get("createQueryVersion")||0)+1}get defaultPopupTemplate(){return this.createPopupTemplate()}writeFields(e,t,r){const n=e.filter((e=>e.name!==T.i5));this.geometryField&&n.unshift(new U.A({name:this.geometryField,alias:this.geometryField,type:"geometry"})),(0,a.sM)(r,n.map((e=>e.toJSON())),t)}get parsedUrl(){return(0,u.An)(this.url)}set renderer(e){(0,D.yp)(e,this.fieldsIndex),this._set("renderer",e)}get wfsCapabilities(){return this.source?.wfsCapabilities}set wfsCapabilities(e){this.source&&(this.source.wfsCapabilities=e)}createPopupTemplate(e){return(0,J.tn)(this,e)}createQuery(){const e=new W.A;e.returnGeometry=!0,e.outFields=["*"],e.where=this.definitionExpression||"1=1";const{timeOffset:t,timeExtent:r}=this;return e.timeExtent=null!=t&&null!=r?r.offset(-t.value,t.unit):r||null,e}getFieldDomain(e,t){return this.getField(e)?.domain}getField(e){return this.fieldsIndex?.get(e)}queryFeatures(e,t){return this.load().then((()=>this.source.queryFeatures(W.A.from(e)||this.createQuery(),t))).then((e=>{if(e?.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}queryObjectIds(e,t){return this.load().then((()=>this.source.queryObjectIds(W.A.from(e)||this.createQuery(),t)))}queryFeatureCount(e,t){return this.load().then((()=>this.source.queryFeatureCount(W.A.from(e)||this.createQuery(),t)))}queryExtent(e,t){return this.load().then((()=>this.source.queryExtent(W.A.from(e)||this.createQuery(),t)))}async hasDataChanged(){try{const{dataChanged:e,updates:t}=await this.source.refresh();return null!=t&&this.read(t,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),e}catch{}return!1}};(0,n._)([(0,p.MZ)({readOnly:!0})],V.prototype,"capabilities",null),(0,n._)([(0,p.MZ)({type:String})],V.prototype,"copyright",void 0),(0,n._)([(0,p.MZ)({readOnly:!0})],V.prototype,"createQueryVersion",null),(0,n._)([(0,p.MZ)({json:{name:"wfsInfo.customParameters",write:{overridePolicy:e=>({enabled:!!(e&&Object.keys(e).length>0),ignoreOrigin:!0})}}})],V.prototype,"customParameters",void 0),(0,n._)([(0,p.MZ)((0,v.P6)("dateFieldsTimeReference"))],V.prototype,"dateFieldsTimeZone",void 0),(0,n._)([(0,p.MZ)({readOnly:!0})],V.prototype,"defaultPopupTemplate",null),(0,n._)([(0,p.MZ)({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],V.prototype,"definitionExpression",void 0),(0,n._)([(0,p.MZ)({type:String})],V.prototype,"displayField",void 0),(0,n._)([(0,p.MZ)(G.Yj)],V.prototype,"elevationInfo",void 0),(0,n._)([(0,p.MZ)({type:String,readOnly:!0,json:{name:"wfsInfo.featureUrl",write:{ignoreOrigin:!0,isRequired:!0}}})],V.prototype,"featureUrl",void 0),(0,n._)([(0,p.MZ)({type:[U.A],json:{name:"layerDefinition.fields",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"fields"}}}})],V.prototype,"fields",void 0),(0,n._)([(0,y.K)("fields")],V.prototype,"writeFields",null),(0,n._)([(0,p.MZ)(H.fieldsIndex)],V.prototype,"fieldsIndex",void 0),(0,n._)([(0,p.MZ)({type:C.A,json:{name:"extent"}})],V.prototype,"fullExtent",void 0),(0,n._)([(0,p.MZ)()],V.prototype,"geometryField",void 0),(0,n._)([(0,p.MZ)({type:String,json:{read:{source:"layerDefinition.geometryType",reader:f.g.read},write:{target:"layerDefinition.geometryType",writer:f.g.write,ignoreOrigin:!0},origins:{service:{read:f.g.read}}}})],V.prototype,"geometryType",void 0),(0,n._)([(0,p.MZ)({type:String})],V.prototype,"id",void 0),(0,n._)([(0,p.MZ)(G.kF)],V.prototype,"labelsVisible",void 0),(0,n._)([(0,p.MZ)({type:[$.A],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:L.w},write:!0}})],V.prototype,"labelingInfo",void 0),(0,n._)([(0,p.MZ)(G.fV)],V.prototype,"legendEnabled",void 0),(0,n._)([(0,p.MZ)({type:["show","hide"]})],V.prototype,"listMode",void 0),(0,n._)([(0,p.MZ)({type:String})],V.prototype,"objectIdField",void 0),(0,n._)([(0,p.MZ)({type:["WFS"]})],V.prototype,"operationalLayerType",void 0),(0,n._)([(0,p.MZ)({type:l.jz,json:{name:"wfsInfo.maxFeatures",write:{ignoreOrigin:!0,isRequired:!0}}})],V.prototype,"maxRecordCount",void 0),(0,n._)([(0,p.MZ)({type:l.jz})],V.prototype,"maxPageCount",void 0),(0,n._)([(0,p.MZ)({type:l.jz})],V.prototype,"maxTotalRecordCount",void 0),(0,n._)([(0,p.MZ)({type:[0],readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0,isRequired:!0}}}}})],V.prototype,"mode",void 0),(0,n._)([(0,p.MZ)({type:String,json:{name:"wfsInfo.name",write:{ignoreOrigin:!0,isRequired:!0}}})],V.prototype,"name",void 0),(0,n._)([(0,p.MZ)({type:String,json:{name:"wfsInfo.wfsNamespace",write:{ignoreOrigin:!0,isRequired:!0}}})],V.prototype,"namespaceUri",void 0),(0,n._)([(0,p.MZ)(G.Ih)],V.prototype,"opacity",void 0),(0,n._)([(0,p.MZ)(H.outFields)],V.prototype,"outFields",void 0),(0,n._)([(0,p.MZ)({readOnly:!0})],V.prototype,"parsedUrl",null),(0,n._)([(0,p.MZ)(G.M6)],V.prototype,"popupEnabled",void 0),(0,n._)([(0,p.MZ)({type:o.A,json:{name:"popupInfo",write:!0}})],V.prototype,"popupTemplate",void 0),(0,n._)([(0,p.MZ)({types:i.H,json:{origins:{service:{name:"drawingInfo.renderer"},"web-scene":{types:i.X,name:"layerDefinition.drawingInfo.renderer",write:!0}},name:"layerDefinition.drawingInfo.renderer",write:{ignoreOrigin:!0}}})],V.prototype,"renderer",null),(0,n._)([(0,p.MZ)(G.PY)],V.prototype,"screenSizePerspectiveEnabled",void 0),(0,n._)([(0,p.MZ)({readOnly:!0})],V.prototype,"source",void 0),(0,n._)([(0,p.MZ)({type:Y.A,json:{name:"layerDefinition.spatialReference",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"extent.spatialReference"}}}})],V.prototype,"spatialReference",void 0),(0,n._)([(0,p.MZ)({readOnly:!0,type:[l.jz],json:{name:"wfsInfo.supportedSpatialReferences",write:{ignoreOrigin:!0,isRequired:!0}}})],V.prototype,"spatialReferences",void 0),(0,n._)([(0,p.MZ)({type:Boolean,value:!1,json:{name:"wfsInfo.swapXY",write:{ignoreOrigin:!0,isRequired:!0}}})],V.prototype,"swapXY",void 0),(0,n._)([(0,p.MZ)({json:{write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"name"}}}})],V.prototype,"title",void 0),(0,n._)([(0,p.MZ)({json:{read:!1},readOnly:!0})],V.prototype,"type",void 0),(0,n._)([(0,p.MZ)(G.OZ)],V.prototype,"url",void 0),(0,n._)([(0,p.MZ)({type:String,readOnly:!0,json:{name:"wfsInfo.version",write:{ignoreOrigin:!0,isRequired:!0}}})],V.prototype,"version",void 0),(0,n._)([(0,p.MZ)()],V.prototype,"wfsCapabilities",null),V=P=(0,n._)([(0,d.$)("esri.layers.WFSLayer")],V);const X=V},14897:(e,t,r)=>{r.d(t,{F:()=>n});const n={supportsStatistics:!0,supportsPercentileStatistics:!0,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsCentroid:!0,supportsCacheHint:!1,supportsDistance:!0,supportsDistinct:!0,supportsExtent:!0,supportsGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQuantization:!0,supportsQuantizationEditMode:!1,supportsQueryGeometry:!0,supportsResultType:!1,supportsSqlExpression:!0,supportsMaxRecordCountFactor:!1,supportsStandardizedQueriesOnly:!0,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!0,supportsQueryByOthers:!0,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!0,supportsDefaultSpatialReference:!1,supportsFullTextSearch:!1,supportsCompactGeometry:!1,maxRecordCountFactor:void 0,maxRecordCount:void 0,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}},26426:(e,t,r)=>{r.d(t,{BM:()=>v,bd:()=>C,sO:()=>x,xD:()=>l});var n=r(26849),o=r(51819),i=r(85204),s=r(28767),a=r(68517),u=r(34639);const p={LineString:"esriGeometryPolyline",MultiLineString:"esriGeometryPolyline",MultiPoint:"esriGeometryMultipoint",Point:"esriGeometryPoint",Polygon:"esriGeometryPolygon",MultiPolygon:"esriGeometryPolygon"};function l(e){return p[e]}function*c(e){switch(e.type){case"Feature":yield e;break;case"FeatureCollection":for(const t of e.features)t&&(yield t)}}function*d(e){if(e)switch(e.type){case"Point":yield e.coordinates;break;case"LineString":case"MultiPoint":yield*e.coordinates;break;case"MultiLineString":case"Polygon":for(const t of e.coordinates)yield*t;break;case"MultiPolygon":for(const t of e.coordinates)for(const e of t)yield*e}}function y(e){for(const t of e)if(t.length>2)return!0;return!1}function f(e){let t=0;for(let r=0;r<e.length;r++){const n=e[r],o=e[(r+1)%e.length];t+=n[0]*o[1]-o[0]*n[1]}return t<=0}function m(e){const t=e[0],r=e[e.length-1];return t[0]===r[0]&&t[1]===r[1]&&t[2]===r[2]||e.push(t),e}function g(e,t,r){switch(t.type){case"LineString":case"MultiPoint":return function(e,t,r){return b(e,t.coordinates,r),e}(e,t,r);case"MultiLineString":return function(e,t,r){for(const n of t.coordinates)b(e,n,r);return e}(e,t,r);case"MultiPolygon":return function(e,t,r){for(const n of t.coordinates){h(e,n[0],r);for(let t=1;t<n.length;t++)w(e,n[t],r)}return e}(e,t,r);case"Point":return function(e,t,r){return S(e,t.coordinates,r),e}(e,t,r);case"Polygon":return function(e,t,r){const n=t.coordinates;h(e,n[0],r);for(let t=1;t<n.length;t++)w(e,n[t],r);return e}(e,t,r)}}function h(e,t,r){const n=m(t);!function(e){return!f(e)}(n)?b(e,n,r):F(e,n,r)}function w(e,t,r){const n=m(t);!function(e){return f(e)}(n)?b(e,n,r):F(e,n,r)}function b(e,t,r){for(const n of t)S(e,n,r);e.lengths.push(t.length)}function F(e,t,r){for(let n=t.length-1;n>=0;n--)S(e,t[n],r);e.lengths.push(t.length)}function S(e,t,r){const[n,o,i]=t;e.coords.push(n,o),r.hasZ&&e.coords.push(i||0)}function T(e){switch(typeof e){case"string":return(0,n.Br)(e)?"esriFieldTypeDate":"esriFieldTypeString";case"number":return"esriFieldTypeDouble";default:return"unknown"}}function x(e,t=4326){if(!e)throw new o.A("geojson-layer:empty","GeoJSON data is empty");if("Feature"!==e.type&&"FeatureCollection"!==e.type)throw new o.A("geojson-layer:unsupported-geojson-object","missing or not supported GeoJSON object type",{data:e});const{crs:r}=e;if(!r)return;const n="string"==typeof r?r:"name"===r.type?r.properties.name:"EPSG"===r.type?r.properties.code:null,s=(0,i.oT)({wkid:t})?new RegExp(".*(CRS84H?|4326)$","i"):new RegExp(`.*(${t})$`,"i");if(!n||!s.test(n))throw new o.A("geojson:unsupported-crs","unsupported GeoJSON 'crs' member",{crs:r})}function v(e,t={}){const r=[],n=new Set,o=new Set;let i,s=!1,a=null,p=!1,{geometryType:f=null}=t,m=!1;for(const t of c(e)){const{geometry:e,properties:c,id:g}=t;if((!e||(f||(f=l(e.type)),l(e.type)===f))&&(s||(s=y(d(e))),p||(p=null!=g,p&&(i=typeof g,c&&(a=Object.keys(c).filter((e=>c[e]===g))))),c&&a&&p&&null!=g&&(a.length>1?a=a.filter((e=>c[e]===g)):1===a.length&&(a=c[a[0]]===g?a:[])),!m&&c)){let e=!0;for(const t in c){if(n.has(t))continue;const i=c[t];if(null==i){e=!1,o.add(t);continue}const s=T(i);if("unknown"===s){o.add(t);continue}o.delete(t),n.add(t);const a=(0,u.rS)(t);a&&r.push({name:a,alias:t,type:s})}m=e}}const g=(0,u.rS)(1===a?.length&&a[0]||null)??void 0;if(g)for(const e of r)if(e.name===g&&(0,u.WA)(e)){e.type="esriFieldTypeOID";break}return{fields:r,geometryType:f,hasZ:s,objectIdFieldName:g,objectIdFieldType:i,unknownFields:Array.from(o)}}function C(e,t){return Array.from(function*(e,t={}){const{geometryType:r,objectIdField:n}=t;for(const o of e){const{geometry:e,properties:i,id:u}=o;if(e&&l(e.type)!==r)continue;const p=i||{};let c;n&&(c=p[n],null==u||c||(p[n]=c=u));const d=new s.Om(e?g(new a.A,e,t):null,p,null,c??void 0);yield d}}(c(e),t))}},1267:(e,t,r)=>{r.d(t,{F0:()=>a,Vx:()=>l,e2:()=>c,f:()=>d});var n=r(22333),o=r(95049),i=r(14897),s=r(3328);function a(e){return{renderer:{type:"simple",symbol:"esriGeometryPoint"===e||"esriGeometryMultipoint"===e?s.Cb:"esriGeometryPolyline"===e?s.yM:s.WR}}}const u=/^[_$a-zA-Z][_$a-zA-Z0-9]*$/;let p=1;function l(e,t){if((0,n.A)("esri-csp-restrictions"))return()=>({[t]:null,...e});try{let r=`this.${t} = null;`;for(const t in e)r+=`this${u.test(t)?`.${t}`:`["${t}"]`} = ${JSON.stringify(e[t])};`;const n=new Function(`\n      return class AttributesClass$${p++} {\n        constructor() {\n          ${r};\n        }\n      }\n    `)();return()=>new n}catch(r){return()=>({[t]:null,...e})}}function c(e={}){return[{name:"New Feature",description:"",prototype:{attributes:(0,o.o8)(e)}}]}function d(e,t){return{analytics:{supportsCacheHint:!1},attachment:null,data:{isVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:e},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:t,supportsDelete:t,supportsEditing:t,supportsChangeTracking:!1,supportsQuery:!0,supportsQueryAnalytics:!1,supportsQueryAttachments:!1,supportsQueryTopFeatures:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:t,supportsExceedsLimitStatistics:!0,supportsAsyncConvert3D:!1},query:i.F,queryRelated:{supportsCount:!0,supportsOrderBy:!0,supportsPagination:!0,supportsCacheHint:!1},queryTopFeatures:{supportsCacheHint:!1},editing:{supportsGeometryUpdate:t,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateWithoutM:!1,supportsUploadWithItemId:!1,supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1,supportsAsyncApplyEdits:!1,zDefault:void 0}}}},86381:(e,t,r)=>{r.d(t,{E:()=>L,Fu:()=>_,O8:()=>N,UH:()=>H,YW:()=>Z,i5:()=>b,mG:()=>j,x$:()=>D});r(14309);var n=r(1968),o=r(51819),i=r(66830),s=r(75899),a=r(69575),u=r(85204),p=r(56215),l=r(26426),c=r(66560),d=r(8397),y=r(93540),f=r(34639),m=r(54413),g=r(57116);const h="xlink:href",w="2.0.0",b="__esri_wfs_id__",F="wfs-layer:getWFSLayerTypeInfo-error",S="wfs-layer:empty-service",T="wfs-layer:feature-type-not-found",x="wfs-layer:geojson-not-supported",v="wfs-layer:kvp-encoding-not-supported",C="wfs-layer:malformed-json",A="wfs-layer:unknown-geometry-type",P="wfs-layer:unknown-field-type",R="wfs-layer:unsupported-spatial-reference",M="wfs-layer:unsupported-wfs-version";async function _(e,t){const r=function(e){const t=W(e);(function(e){const t=e.firstElementChild?.getAttribute("version");if(t&&t!==w)throw new o.A(M,`Unsupported WFS version ${t}. Supported version: ${w}`)})(t),Y(t);const r=t.firstElementChild,n=(0,i.PP)(function(e){return(0,c.i)(e,{FeatureTypeList:{FeatureType:e=>{const t={typeName:"undefined:undefined",name:"",title:"",description:"",extent:null,namespacePrefix:"",namespaceUri:"",defaultSpatialReference:4326,supportedSpatialReferences:[]},r=new Set;return(0,c.p)(e,{Name:e=>{const{name:r,prefix:n}=J(e.textContent);t.typeName=`${n}:${r}`,t.name=r,t.namespacePrefix=n,t.namespaceUri=e.lookupNamespaceURI(n)},Abstract:e=>{t.description=e.textContent},Title:e=>{t.title=e.textContent},WGS84BoundingBox:e=>{t.extent=function(e){let t,r,n,o;for(const i of e.children)switch(i.localName){case"LowerCorner":[t,r]=i.textContent.split(" ").map((e=>Number.parseFloat(e)));break;case"UpperCorner":[n,o]=i.textContent.split(" ").map((e=>Number.parseFloat(e)))}return{xmin:t,ymin:r,xmax:n,ymax:o,spatialReference:u.KK}}(e)},DefaultCRS:e=>{const n=k(e);n&&(t.defaultSpatialReference=n,r.add(n))},OtherCRS:e=>{const t=k(e);t&&r.add(t)}}),t.title||(t.title=t.name),r.add(4326),t.supportedSpatialReferences.push(...r),t}}})}(r));return{operations:E(r),get featureTypes(){return Array.from(n())},readFeatureTypes:n}}((await(0,n.A)(e,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetCapabilities",VERSION:w,...t?.customParameters},signal:t?.signal})).data);return function(e,t){(0,s.m3)(e)&&((0,s.FX)(e,t.operations.DescribeFeatureType.url,!0)&&(t.operations.DescribeFeatureType.url=(0,s.lM)(t.operations.DescribeFeatureType.url)),(0,s.FX)(e,t.operations.GetFeature.url,!0)&&(t.operations.GetFeature.url=(0,s.lM)(t.operations.GetFeature.url)))}(e,r),r}const O=["json","application/json","geojson","application/json; subtype=geojson","application/geo+json"];function I(e){for(const t of O){const r=e.findIndex((e=>e.toLowerCase()===t));if(r>=0)return e[r]}return null}function E(e){let t=!1;const r={GetCapabilities:{url:""},DescribeFeatureType:{url:""},GetFeature:{url:"",outputFormat:null,supportsPagination:!1}},n=[],i=[];if((0,c.p)(e,{OperationsMetadata:{Parameter:e=>{if("outputFormat"===e.getAttribute("name"))return{AllowedValues:{Value:({textContent:e})=>{e&&n.push(e)}}}},Operation:e=>{switch(e.getAttribute("name")){case"GetCapabilities":return{DCP:{HTTP:{Get:e=>{r.GetCapabilities.url=e.getAttribute(h)}}}};case"DescribeFeatureType":return{DCP:{HTTP:{Get:e=>{r.DescribeFeatureType.url=e.getAttribute(h)}}}};case"GetFeature":return{DCP:{HTTP:{Get:e=>{r.GetFeature.url=e.getAttribute(h)}}},Parameter:e=>{if("outputFormat"===e.getAttribute("name"))return{AllowedValues:{Value:({textContent:e})=>{e&&i.push(e)}}}}}}},Constraint:e=>{switch(e.getAttribute("name")){case"KVPEncoding":return{DefaultValue:e=>{t="true"===e.textContent.toLowerCase()}};case"ImplementsResultPaging":return{DefaultValue:e=>{r.GetFeature.supportsPagination="true"===e.textContent.toLowerCase()}}}}}}),r.GetFeature.outputFormat=I(i)??I(n),!t)throw new o.A(v,"WFS service doesn't support key/value pair (KVP) encoding");if(null==r.GetFeature.outputFormat)throw new o.A(x,"WFS service doesn't support GeoJSON output format");return r}function k(e){const t=parseInt(e.textContent?.match(/(?<wkid>\d+$)/i)?.groups?.wkid??"",10);if(!Number.isNaN(t))return t}function j(e,t,r){return(0,i.I6)(e,(e=>r?e.name===t&&e.namespaceUri===r:e.typeName===t||e.name===t))}async function N(e,t,r,n={}){const{featureType:i,extent:s}=await async function(e,t,r,n={}){const i=e.readFeatureTypes(),s=t?j(i,t,r):i.next().value,{spatialReference:p=new m.A({wkid:s?.defaultSpatialReference})}=n;if(null==s)throw t?new o.A(T,`The type '${t}' could not be found in the service`):new o.A(S,"The service is empty");let l=new g.A({...s.extent,spatialReference:m.A.WGS84});if(!(0,u.aI)(l.spatialReference,p))try{await(0,a.initializeProjection)(l.spatialReference,p,void 0,n),l=(0,a.project)(l,p)}catch{throw new o.A(R,"Projection not supported")}return{extent:l,spatialReference:p,featureType:s}}(e,t,r,n),{spatialReference:p}=H(e.operations.GetFeature.url,i,n.spatialReference),{fields:l,geometryType:c,swapXY:d,objectIdField:y,geometryField:f}=await async function(e,t,r,n={}){const{typeName:i}=t,[s,a]=await Promise.allSettled([U(e.operations.DescribeFeatureType.url,i,n),G(e,i,r,n)]),u=e=>new o.A(F,`An error occurred while getting info about the feature type '${i}'`,{error:e});if("rejected"===s.status)throw u(s.reason);if("rejected"===a.status)throw u(a.reason);const{fields:p,errors:l}=s.value??{},c=s.value?.geometryType||a.value?.geometryType,d=a.value?.swapXY??!1;if(null==c)throw new o.A(A,`The geometry type could not be determined for type '${i}`,{typeName:i,geometryType:c,fields:p,errors:l});return{...Z(p??[]),geometryType:c,swapXY:d}}(e,i,p,n);return{url:e.operations.GetCapabilities.url,name:i.name,namespaceUri:i.namespaceUri,fields:l,geometryField:f,geometryType:c,objectIdField:y,spatialReference:n.spatialReference??new m.A({wkid:i.defaultSpatialReference}),extent:s,swapXY:d,wfsCapabilities:e,customParameters:n.customParameters}}function Z(e){const t=e.find((e=>"geometry"===e.type));let r=e.find((e=>"oid"===e.type));return e=e.filter((e=>"geometry"!==e.type)),r||(r=new y.A({name:b,type:"oid",alias:b}),e.unshift(r)),{geometryField:t?.name??null,objectIdField:r.name,fields:e}}async function G(e,t,r,o={}){let i,s=!1;const[a,u]=await Promise.all([D(e.operations.GetFeature.url,t,r,e.operations.GetFeature.outputFormat,{...o,count:1}),(0,n.A)(e.operations.GetFeature.url,{responseType:"text",query:$(t,r,void 0,{...o,count:1}),signal:o?.signal})]),c="FeatureCollection"===a.type&&a.features[0]?.geometry;if(c){let e;switch(i=p.g.fromJSON((0,l.xD)(c.type)),c.type){case"Point":e=c.coordinates;break;case"LineString":case"MultiPoint":e=c.coordinates[0];break;case"MultiLineString":case"Polygon":e=c.coordinates[0][0];break;case"MultiPolygon":e=c.coordinates[0][0][0]}const t=/<[^>]*pos[^>]*> *(-?\d+(?:\.\d+)?) (-?\d+(?:\.\d+)?)/.exec(u.data);if(t){const r=e[0].toFixed(3),n=e[1].toFixed(3),o=parseFloat(t[1]).toFixed(3);r===parseFloat(t[2]).toFixed(3)&&n===o&&(s=!0)}}return{geometryType:i,swapXY:s}}async function U(e,t,r){return function(e,t){const{name:r}=J(e),n=W(t);Y(n);const s=(0,i.I6)((0,c.i)(n.firstElementChild,{element:e=>e}),(e=>e.getAttribute("name")===r));if(null!=s){const e=s.getAttribute("type"),t=e?(0,i.I6)((0,c.i)(n.firstElementChild,{complexType:e=>e}),(t=>t.getAttribute("name")===J(e).name)):(0,i.I6)((0,c.i)(s,{complexType:e=>e}),(()=>!0));if(t)return function(e){const t=[],r=[];let n;const i=(0,c.i)(e,{complexContent:{extension:{sequence:{element:e=>e}}}});for(const s of i){const i=s.getAttribute("name");if(!i)continue;let a,u;if(s.hasAttribute("type")?a=J(s.getAttribute("type")).name:(0,c.p)(s,{simpleType:{restriction:e=>(a=J(e.getAttribute("base")).name,{maxLength:e=>{u=+e.getAttribute("value")}})}}),!a)continue;const p="true"===s.getAttribute("nillable");let l=!1;switch(a.toLowerCase()){case"integer":case"nonpositiveinteger":case"negativeinteger":case"long":case"int":case"short":case"byte":case"nonnegativeinteger":case"unsignedlong":case"unsignedint":case"unsignedshort":case"unsignedbyte":case"positiveinteger":r.push(new y.A({name:i,alias:i,type:"integer",nullable:p,length:(0,f._b)("integer")}));break;case"float":case"double":case"decimal":r.push(new y.A({name:i,alias:i,type:"double",nullable:p,length:(0,f._b)("double")}));break;case"boolean":case"string":case"gyearmonth":case"gyear":case"gmonthday":case"gday":case"gmonth":case"anyuri":case"qname":case"notation":case"normalizedstring":case"token":case"language":case"idrefs":case"entities":case"nmtoken":case"nmtokens":case"name":case"ncname":case"id":case"idref":case"entity":case"duration":case"time":r.push(new y.A({name:i,alias:i,type:"string",nullable:p,length:u??(0,f._b)("string")}));break;case"datetime":case"date":r.push(new y.A({name:i,alias:i,type:"date",nullable:p,length:u??(0,f._b)("date")}));break;case"pointpropertytype":n="point",l=!0;break;case"multipointpropertytype":n="multipoint",l=!0;break;case"curvepropertytype":case"multicurvepropertytype":case"multilinestringpropertytype":n="polyline",l=!0;break;case"surfacepropertytype":case"multisurfacepropertytype":case"multipolygonpropertytype":n="polygon",l=!0;break;case"geometrypropertytype":case"multigeometrypropertytype":l=!0,t.push(new o.A(A,`geometry type '${a}' is not supported`,{type:(new XMLSerializer).serializeToString(e)}));break;default:t.push(new o.A(P,`Unknown field type '${a}'`,{type:(new XMLSerializer).serializeToString(e)}))}l&&r.push(new y.A({name:i,alias:i,type:"geometry",nullable:p}))}for(const e of r)if("integer"===e.type&&!e.nullable&&q.has(e.name.toLowerCase())){e.type="oid";break}return{geometryType:n,fields:r,errors:t}}(t)}throw new o.A(T,`Type '${e}' not found in document`,{document:(new XMLSerializer).serializeToString(n)})}(t,(await(0,n.A)(e,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"DescribeFeatureType",VERSION:w,TYPENAME:t,TYPENAMES:t,...r?.customParameters},signal:r?.signal})).data)}const q=new Set(["objectid","fid"]);async function D(e,t,r,i,s){let{data:a}=await(0,n.A)(e,{responseType:"text",query:$(t,r,i,s),signal:s?.signal});a=a.replaceAll(/": +(-?\d+),(\d+)(,)?/g,'": $1.$2$3');try{return JSON.parse(a)}catch(e){throw new o.A(C,"Error while parsing the response",{response:a,error:e})}}function $(e,t,r,n){const o="number"==typeof t?t:t.wkid;return{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:w,TYPENAMES:e,OUTPUTFORMAT:r,SRSNAME:"EPSG:"+o,STARTINDEX:n?.startIndex,COUNT:n?.count,...n?.customParameters}}async function L(e,t,r){const o=await(0,n.A)(e,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:w,TYPENAMES:t,RESULTTYPE:"hits",...r?.customParameters},signal:r?.signal}),i=/numberMatched=["'](?<numberMatched>\d+)["']/gi.exec(o.data);if(i?.groups)return+i.groups.numberMatched}function W(e){return(new DOMParser).parseFromString(e.trim(),"text/xml")}function J(e){const[t,r]=e.split(":");return{prefix:r?t:"",name:r??t}}function Y(e){let t="",r="";if((0,c.p)(e.firstElementChild,{Exception:e=>(t=e.getAttribute("exceptionCode"),{ExceptionText:e=>{r=e.textContent}})}),t)throw new o.A(`wfs-layer:${t}`,r)}function H(e,t,r){const n={wkid:t.defaultSpatialReference},o=null!=r?.wkid?{wkid:r.wkid}:n;return{spatialReference:o,getFeatureSpatialReference:(0,d.Fi)(e)||o.wkid&&t.supportedSpatialReferences.includes(o.wkid)?{wkid:o.wkid}:{wkid:t.defaultSpatialReference}}}},66560:(e,t,r)=>{function n(e,t){if(e&&t)for(const r of e.children)if(r.localName in t){const e=t[r.localName];if("function"==typeof e){const t=e(r);t&&n(r,t)}else n(r,e)}}function*o(e,t){for(const r of e.children)if(r.localName in t){const e=t[r.localName];"function"==typeof e?yield e(r):yield*o(r,e)}}r.d(t,{i:()=>o,p:()=>n})}}]);